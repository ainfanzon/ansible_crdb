---

#################################################################
# This playbook updates the OS and installs CRDB software 
#

- name: Cockroach database and other tools installation
  hosts: all
  gather_facts: true
  remote_user: ec2-user           # use the uid in the ssh public key file

  # Import variables in the vars.yml file to customize the deployment
  vars_files:
    - vars.yml

  tasks:

    # Upgrade OS packages
    - name: Upgrading all packages
      become: true 
      tags:
        - upgrade_packages
      dnf:
        name: "*"
        state: latest
  
    # Install some additional packages 
    - name: Installing additional packages
      become: true 
      tags:
        - add_packages
      dnf:
        name:
          - wget
          - bzip2
          - haproxy
          - curl
          - llvm
          - telnet
        state: latest

    # Download and decompress the CRDB tar file (~1.19s user)
    - name: Downloading and Unarchiving the CRDB tar file 
      tags:
        - download_crdb
      ansible.builtin.unarchive:
        src: "{{ crdb_dwnload_url }}{{crdb_version}}.tgz"
        dest: /tmp
        remote_src: yes

    # Copy CRDB binary to /usr/local/bin (~0.82s user)
    - name: Coping cockroach binary to /usr/local/bin
      become: true 
      ansible.builtin.copy:
        src: "/tmp/{{ crdb_version }}/cockroach"
        dest: /usr/local/bin
        mode: '0755'
        remote_src: yes
      tags:
        - move_binary

    # Create the directory where the external libraries will be stored (~0.78s user)
    - name: Creating /usr/local/lib/cockroach directory for the libraries
      become: true 
      tags:
        - create_lib_dir
      ansible.builtin.file:
        path: /usr/local/lib/cockroach
        state: directory
        mode: '0755'

    # Move library files to /usr/local/lib (~0.81s user)
    - name: Copying cockroach libraries to /usr/local/lib
      become: true 
      tags:
        - move_libraries
      ansible.builtin.copy:
        src: "/tmp/{{ crdb_version }}/lib/"
        dest: /usr/local/lib/cockroach
        remote_src: yes

    # Create additional CRDB user (~1.61s user)
    - name: Creating the "{{ crdb_uid }}" user
      become: true 
      tags:
        - create_user
      ansible.builtin.user:
        group: "{{ crdb_grp }}"
        home: "{{ crdb_home }}"
        name: "{{ crdb_uid }}"
        password: "{{ crdb_pwd | password_hash('sha512') }}"
        shell: /bin/bash
        state: present

#    # Create the Cockroach directory for the service
#    - name: Creating the CRDB service directory
#      become: true 
#      tags:
#        - crdb_service_dir
#      ansible.builtin.file:
#        group: "{{ crdb_grp }}"
#        owner: "{{ crdb_uid }}" 
#        mode: '0700'
#        path: "{{ crdb_service }}"
#        state: directory
#
#    - name: Check that you can connect (GET) to a page and it returns a status 200
#      become: true
#      tags:
#        - service_conf
#      ansible.builtin.uri:
#        url: https://raw.githubusercontent.com/cockroachdb/docs/main/src/current/_includes/v24.3/prod-deployment/insecurecockroachdb.service
#        dest: /etc/systemd/system/insecurecockroachdb.service

    # Modify sshd to allow login (~0.79s user)
    - name: Insert "Match User" configuration block in /etc/ssh/sshd_config
      become: true 
      tags:
        - sshd_config
      ansible.builtin.blockinfile:
        path: /etc/ssh/sshd_config
        append_newline: true
        prepend_newline: true
        block: |
          Match User roachie
          PasswordAuthentication yes

    # Restart the service to allow the new user to connect (~0.89s user)
    - name: Restart service sshd
      tags:
        - restart_sshd
      become: true 
      ansible.builtin.service:
        name: sshd.service 
        state: restarted

    # Create the home directory for the CRDB user (~0.80s user)
    - name: Creating the home directory for CRDB
      become: true 
      tags:
        - crdb_home_dir
      ansible.builtin.file:
        group: "{{ crdb_grp }}"
        mode: '0777'
        owner: "{{ crdb_uid }}"
        path: "{{ crdb_home }}"
        state: directory

    # Create the directory structure for the CRDB (~1.35s user)
    - name: Creating cockroach subdirs
      become: true 
      loop: "{{ crdb_dirs }}"
      tags:
        - crdb_subdirs
      ansible.builtin.file:
        group: "{{ crdb_grp }}"
        mode: '0777'
        owner: "{{ crdb_uid }}"
        path: "{{ crdb_home }}/{{ item }}"
        state: directory

    # Cleanup download and working files (~0.82s user)
    - name: Deleting CRDB installer content & directory
      become: true 
      tags:
        - cleanup
      ansible.builtin.file:
        path: "/tmp/{{ crdb_version }}"
        state: absent

  #cockroach start --insecure --listen-addr=10.0.43.146:26257 --join=10.0.45.32:26257,10.0.43.146:26257,10.0.41.118:26257 --http-addr=10.0.43.146:8080 --store=/home/cockroach/data/cr_data_0 --background
  #cockroach init --insecure --host=10.0.41.118
  #
  #CREATE EXTERNAL CONNECTION {source} AS 'postgresql://root@10.0.4.98:26257/defaultdb?application_name=%24+cockroach+sql&connect_timeout=15&sslmode=disable'
