---

- name: Decommissioning all resouces
  hosts: localhost
  connection: local
  gather_facts: true

  vars_files:
    - vars.yml

  tasks:
    - name: Decommissioning the "{{ aws_ec2_name_tag }}" EC2 instance
      amazon.aws.ec2_instance:
        profile: "{{ aws_profile }}"
        region: "{{ aws_region }}"
        state: absent
        filters:
          instance-state-name: running
          "tag:Name": "{{ aws_ec2_name_tag }}"
          "tag:Environment": "{{ aws_ec2_env_tag }}"

    # Get VPC details to be able to remove it.
    - name: Grabbing "{{ aws_vpc_name }}" VPC details
      amazon.aws.ec2_vpc_net_info:
        profile: "{{ aws_profile }}"
        region: "{{ aws_region }}"
        filters:
          "tag:Name": "aim_ansible_network"
      register: all_vpcs

    # Display vpc info
    - name: Output "{{ aws_vpc_name }}" info 
      debug:
        msg: "{{ all_vpcs.vpcs[0].vpc_id}}"

    # Decommissioning the routing table 
    - name: Decommissioning the "{{ aws_route_table_name }}" routing table 
      amazon.aws.ec2_vpc_route_table:
        profile: "{{ aws_profile }}"
        region: "{{ aws_region }}"
        vpc_id: "{{ all_vpcs.vpcs[0].vpc_id }}"
        tags:
          Name: "{{ aws_route_table_name }}"
        state: absent

    # Decommissioning the internet gateway
    - name: Deleting the internet gateway in Environment
      community.aws.ec2_vpc_igw:
        profile: "{{ aws_profile }}"
        region: "{{ aws_region }}"
        vpc_id: "{{ item.vpc_id }}"
        state: absent
      loop: '{{ all_vpcs.vpcs }}'

    # Decommission the subnet
    - name: Decommissioning the "{{ aws_vpc_subnet_name }}" subnet
      ec2_vpc_subnet:
        cidr: "{{ aws_subnet_cidr_block  }}"
        profile: "{{ aws_profile }}"
        region: "{{ aws_region }}"
        vpc_id: "{{ all_vpcs.vpcs[0].vpc_id }}"
        state: absent

    # Decommissioning the security groups
    - name: Gather information about all Security Groups in Environment
      amazon.aws.ec2_group_info:
        profile: "{{ aws_profile }}"
        region: "{{ aws_region }}"
        filters:
          vpc-id: "{{ all_vpcs.vpcs[0].vpc_id }}"
      register: all_sg

    - name: Output aim_ansible_network security groups
      debug:
        msg: "{{ all_sg }}"

    - name: Delete Security Groups in VPC {{ all_vpcs.vpcs[0].vpc_id }} by ID
      amazon.aws.ec2_group:
        profile: "{{ aws_profile }}"
        region: "{{ aws_region }}"
        group_id: "{{ item.group_id }}"
        state: absent
      loop: "{{ all_sg.security_groups }}"
      when: item.group_name != "default"

    # Decommision the VPC
    - name: Decommissioning the "{{ aws_vpc_name }}" VPC
      amazon.aws.ec2_vpc_net:
        cidr_block: "{{ aws_vpc_cidr_block }}"
        name: "{{ aws_vpc_name }}"
        profile: "{{ aws_profile }}"
        region: "{{ aws_region }}"
        state: absent

    # Decomision the key-pair
    - name: remove key pair from AWS by name
      amazon.aws.ec2_key:
        name: "{{ aws_key_name }}"
        profile: "{{ aws_profile }}"
        region: "{{ aws_region }}"
        state: absent
      tags: 
        - rm_kp

    # Delete aws key-pair form local dir
    - name: Remove file (delete file)
      ansible.builtin.file:
        path: "{{ aws_wrk_dir }}/{{aws_key_name}}.pem"
        state: absent
      tags:
        - rm_kp_pem
